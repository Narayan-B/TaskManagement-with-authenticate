require('dotenv').config()
const express=require('express')
const cors=require('cors')
const {checkSchema} =require('express-validator')
const port =5666
const app=express()
const configureDB=require('./config/db')
const userRegisterValidationSchema = require('./validations/userRegistrationValidations')
const userLoginValidationSchema=require('./validations/userLoginValidationSchema')
const taskValidationSchema=require('./validations/taskValidationSchema')
const authenticateUser=require('./middlewares/authentication')
const authorizeUser=require('./middlewares/authorization')
const userCltr = require('./controllers/userCltr')
const taskCltr=require('./controllers/taskCltr')
 app.use(cors())
app.use(express.json())
configureDB()
app.post('/register',checkSchema(userRegisterValidationSchema),userCltr.Register)
app.post('/login',checkSchema(userLoginValidationSchema),userCltr.Login)
app.get('/users',authenticateUser,authorizeUser(['teamlead']),userCltr.users)
app.get('/account',authenticateUser,authorizeUser(['teamlead','employee']),userCltr.Account)
app.post('/task',authenticateUser,authorizeUser(['teamlead']),checkSchema(taskValidationSchema),taskCltr.create)
app.get('/task',authenticateUser,authorizeUser(['teamlead','employee']),taskCltr.getAllTaskTitles)
app.put('/task/:id',authenticateUser,authorizeUser(['teamlead']),checkSchema(taskValidationSchema),taskCltr.update)
app.delete('/task/:id',authenticateUser,authorizeUser(['teamlead']),taskCltr.delete)
app.listen(port,()=>{
    console.log('server connected to ',port )
})